#!/bin/bash

#
# Script:  multipass-wrapper
# Purpose: A simple wrapper for multipass to create some VMs for dev purposes
# Author:  Ed Randall, April 2022
#

ROOT_DIR="$HOME/scripts/"

VM_PREFIX="mpw"

BASH_ALIAS_FILE="$HOME/.bash_aliases"
CLOUD_INIT_FILE="$ROOT_DIR/etc/dev-env/cloud-init.yaml"
SSH_PRIV_KEY="$HOME/.ssh/precision-key"
SSH_PUB_KEY="$SSH_PRIV_KEY.pub"

MULTIPASS=$(which multipass) || { echo "Error: multipass not found, please verify" ; exit 1; } ;

[ -f $SSH_PRIV_KEY ] || { echo "Please check if $SSH_PRIV_KEY file is present"; exit 1; } ;
[ -f $SSH_PUB_KEY ] || { echo "Please check if $SSH_PUB_KEY file is present"; exit 1; } ;

function usage {
  echo "Usage: { multipass-wrapper create [name] | destroy [name] | killall }"
  exit 1
}

[ "$1" == "list" ] || [ "$1" == "killall" ] && [ "$#" -ne 1 ] && usage
[ "$1" == "create" ] || [ "$1" == "destroy" ] && [ "$#" -ne 2 ] && usage

HOSTNAME=$VM_PREFIX-$2

function gen_cloud_init {
[ -f $CLOUD_INIT_FILE ] && { rm -f $CLOUD_INIT_FILE; } ;
cat <<EOF > $CLOUD_INIT_FILE
---
users:
  - name: dev-user
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /usr/bin/bash
    ssh_authorized_keys:
      - $( cat $SSH_PUB_KEY )

package_update: true
package_upgrade: true

packages:
  - unzip
  - awscli
  - apt-transport-https 
  - ca-certificates
  - gnupg

runcmd:
  - curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-387.0.0-linux-x86.tar.gz
  - tar xf google-cloud-cli-387.0.0-linux-x86.tar.gz
  - sudo CLOUDSDK_CORE_DISABLE_PROMPTS=1 ./google-cloud-sdk/install.sh
  - echo ". /google-cloud-sdk/completion.bash.inc" >> ~/.bashrc
  - echo ". /google-cloud-sdk/path.bash.inc" >> ~/.bashrc
EOF
}

case $1 in
     create)
       gen_cloud_init

       echo "> Creating Virtual Machine: $HOSTNAME"
       $MULTIPASS launch --name $HOSTNAME --cloud-init $CLOUD_INIT_FILE
       
       IP_ADDR="$($MULTIPASS list | grep $HOSTNAME | awk {'print $3'})"

       echo "alias $HOSTNAME='ssh -o StrictHostKeyChecking=no -i $SSH_PRIV_KEY dev-user@$IP_ADDR'" >> $BASH_ALIAS_FILE
       echo "> source $BASH_ALIAS_FILE before proceding"
     ;;

     list)
       $MULTIPASS list
     ;;

     destroy)
       #$MULTIPASS delete $HOSTNAME 2> /dev/null
       $MULTIPASS delete $HOSTNAME
       #$MULTIPASS purge 2> /dev/null
       $MULTIPASS purge 

       echo "> Removing alias for $HOSTNAME"
       sed -i "/$HOSTNAME/d" $BASH_ALIAS_FILE

       echo
       ;;

     killall)
       
       if [[ $($MULTIPASS list | grep "No instances found.") ]] ; then
         echo "No instances are running, nothing to kill."
         exit 0
       fi
	     
       echo -n "> Are you sure you want to destroy and purge ALL VMs? [y/N]: "
       read sure

       if [ $sure == "y" ] || [ $sure == "Y" ] || [ $sure == "yes" ] || [ $sure == "Yes" ] ; then
         echo "> Deleting (and purging) ALL running VMs"
         $MULTIPASS list | grep -v ^Name | awk {'print $1'} | xargs $MULTIPASS delete
         $MULTIPASS purge
       else
         echo "> Exiting without deleting VMs"
       fi
     ;;

     *)
       usage
     ;;
esac


